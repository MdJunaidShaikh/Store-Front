name: Build and Deploy

on:
  push:
    branches:
      - main
  
jobs:
  quality-assurance:
    name: Quality Assurance 
    runs-on: ubuntu-latest
    container: python:3.12.2-slim-bullseye

    steps: 
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2.0.0 
        with:
          poetry-version: 1.4.2

      - name: Lint
        run: |
          pip install flake8
          flake8 .

      - name: Install all dependencies
        run: poetry install && poetry run pre-commit install

  build_test:
    runs-on: ubuntu-latest
    
    steps: 
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12.3'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        python manage.py test

  Deploy:
    runs-on: ubuntu-latest
    needs: [build_test, quality-assurance]

    steps:
    - name: Echo hello world 
      run: echo "Hello Junaid"


    # steps:
    # - name: Checkout code
    #   uses: actions/checkout@v3

    # - name: Set up Docker
    #   uses: docker/setup-buildx-action@v2

    # - name: Log in to Amazon ECR
    #   uses: aws-actions/amazon-ecr-login@v1

    # - name: Build and push Docker image
    #   run: |
    #     docker build -t myapp:latest .
    #     docker tag myapp:latest 891376989340.dkr.ecr.us-east-1.amazonaws.com/myapp:latest
    #     docker push 891376989340.dkr.ecr.us-east-1.amazonaws.com/myapp:latest

    # - name: Deploy to AWS
    #   run: |
    #     # Add your AWS deployment commands here
    #     # For example, using ECS or Elastic Beanstalk
    #   uses: peaceiris/actions-gh-pages@v3
    #   with:
        # github_token: ${{ secrets.GITHUB_TOKEN }}
    #     publish_dir: ./html
