name: Build and Deploy

on:
  push:
    branches:
      - main
      
  pull_request:
    branches:
      - main
  
jobs:
  build:
    # name: Quality Assurance 
    runs-on: ${{ matrix.os }}
    strategy :
      matrix:
        os:  [Windows_OS, Linux_OS , Mac_OS]
    # container: python:3.12.2-slim-bullseye

    steps: 
      - name : Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python 
        uses: actions/setup-python@v4
        with:
            python-version: '3.12.3'

      - name: Install Dependencies
        run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt

      - name: Log in to Amazon ECR
        env:
          AWS_REGION: 
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin 891376989340.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Build Docker image
        run: |
          docker build -t 891376989340.dkr.ecr.us-east-1.amazonaws.com/django-ec2-complete .

      - name: Tag Docker image
        env:
          AWS_REGION: us-east-1 # Update this to your desired AWS region
        run: |
          docker tag 891376989340.dkr.ecr.us-east-1.amazonaws.com/django-ec2-complete:latest

      - name: Push Docker image to ECR
        env:
          AWS_REGION: us-east-1 # Update this to your desired AWS region
        run: |
          docker push 891376989340.dkr.ecr.us-east-1.amazonaws.com/django-ec2-complete:latest

      - name: Echo deployment complete
        run: echo "Docker image has been pushed to Amazon ECR"


      # - name: Run tests
      #   run: |it add .
      #       python manage.py test
      # - name: Install Poetry
      #   uses: abatilo/actions-poetry@v2.0.0 
      #   with:
      #     poetry-version: 1.4.2

      # - name: Lint
      #   run: |
      #     pip install flake8
      #     flake8 .

      # - name: Install all dependencies
      #   run: poetry install && poetry run pre-commit install

  # build_test:
  #   runs-on: ubuntu-latest
    
  #   steps: 
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Set up Python
  #     uses: actions/setup-python@v4
  #     with:
  #       python-version: '3.12.3'

  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install -r requirements.txt

  #   - name: Run tests
  #     run: |
  #       python manage.py test

  # Deploy:
  #   runs-on: ubuntu-latest
  #   needs: [build_test, quality-assurance]

  #   steps:
  #   - name: Echo hello world 
  #     run: echo "Hello Junaid"